# Ruby CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
version: 2.1

orbs:
  ruby: circleci/ruby@1.7.1
  aws-ecr: circleci/aws-ecr@8.2.1
  aws-eks: circleci/aws-eks@1.1.0
  aws-cli: circleci/aws-cli@3.1.4
  kubernetes: circleci/kubernetes@1.3.1
  docker: circleci/docker@1.5.0

jobs:
  build_and_test:
    parameters:
      ruby_version:
        type: string
      elasticsearch_version:
        type: string
    docker:
      - image: cimg/ruby:<< parameters.ruby_version >>
      - image: redis:6.2
      - image: docker.elastic.co/elasticsearch/elasticsearch:<< parameters.elasticsearch_version >>
        environment:
          - xpack.security.enabled: false
          - discovery.type: single-node
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: Copy config files for Flickr
          command: |
            cp -p config/flickr.yml.example config/flickr.yml
      # Install gems with Bundler
      - ruby/install-deps:
          # Need to clear the gem cache? Set or bump the CACHE_VERSION in your
          # CircleCi project: Project Settings > Environment Variables
          key: gems-ruby-<< parameters.ruby_version >>-v{{ .Environment.CACHE_VERSION }}
      - run:
          name: Prepare Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
      - run:
          name: Wait for Elasticsearch
          command: dockerize --wait http://localhost:9200 -timeout 1m
      - ruby/rspec-test:
          # Need to temporarily test with a particular seed? Use:
          # order: rand:123
          order: rand
      - run:
          name: Report Test Results
          command: |
            ./cc-test-reporter after-build
  update-staging:
    docker:
      - image: cimg/aws:2023.01
    steps:
      - checkout
      - setup_remote_docker
      - aws-cli/setup:
          aws-region: STAGING_AWS_REGION
          aws-access-key-id: CIRCLE_CI_USER_ACCESS_KEY_ID 
          aws-secret-access-key: CIRCLE_CI_USER_SECRET_ACCESS_KEY
      - run: docker build -t asis .
      - run: docker tag asis:latest 213305845712.dkr.ecr.us-east-2.amazonaws.com/asis:latest
      - run: docker tag asis:latest 213305845712.dkr.ecr.us-east-2.amazonaws.com/asis:${CIRCLE_BUILD_NUM}
      - run: aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 213305845712.dkr.ecr.us-east-2.amazonaws.com
      - run: docker push 213305845712.dkr.ecr.us-east-2.amazonaws.com/asis:latest
      - run: docker push 213305845712.dkr.ecr.us-east-2.amazonaws.com/asis:${CIRCLE_BUILD_NUM}
      - run: 
          name: update asis k8s deployment
          command: |
            aws ssm send-command \
            --document-name "searchgov-deployment-ssm-document" \
            --targets "Key=tag:Name,Values=jumphost-staging-search-instance" \
            --parameters '{"DeploymentName":["search-staging-asis-deploy"], "Namespace":["search"]}' \
            --comment "restart asis staging deployment"
  update-prod:
    docker:
      - image: cimg/aws:2023.01
    steps:
      - checkout
      - setup_remote_docker
      - aws-cli/setup:
          aws-region: PROD_AWS_REGION
          aws-access-key-id: CIRCLE_CI_USER_ACCESS_KEY_ID 
          aws-secret-access-key: CIRCLE_CI_USER_SECRET_ACCESS_KEY
      - run: docker build -t asis .
      - run: docker tag asis:latest 213305845712.dkr.ecr.us-east-1.amazonaws.com/asis:latest
      - run: docker tag asis:latest 213305845712.dkr.ecr.us-east-1.amazonaws.com/asis:${CIRCLE_BUILD_NUM}
      - run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 213305845712.dkr.ecr.us-east-1.amazonaws.com
      - run: docker push 213305845712.dkr.ecr.us-east-1.amazonaws.com/asis:latest
      - run: docker push 213305845712.dkr.ecr.us-east-1.amazonaws.com/asis:${CIRCLE_BUILD_NUM}
      - run: 
          name: update asis k8s deployment
          command: |
            aws ssm send-command \
            --document-name "searchgov-deployment-ssm-document" \
            --targets "Key=tag:Name,Values=jumphost-prod-search-instance" \
            --parameters '{"DeploymentName":["search-prod-asis-deploy"], "Namespace":["search"]}' \
            --comment "restart asis prod deployment"
  

workflows:
  build_and_test:
    jobs:
      - build_and_test:
          name: "Ruby << matrix.ruby_version >>, ES << matrix.elasticsearch_version >>"
          matrix:
            parameters:
              ruby_version:
                - 3.1.4
              elasticsearch_version:
                - 7.17.7
                # not yet compatible with Elasticsearch 8
  build_image_and_deploy:
    jobs:
      - update-staging:
          context:
            - aws-client-keys
          filters:
            branches:
              only:
                - main
      - update-prod:
          context:
            - aws-client-keys
          filters:
            branches:
              only:
                - production
                
